---
import { render } from "datocms-structured-text-to-html-string";
const { content } = Astro.props;

const options = {
    renderBlock({ record, adapter: { renderNode } }) {
        return renderNode(
            "div",
            {},
            renderNode("img", {
                src: record.image.url,
                alt: record.image.alt,
            }),
            renderNode("span", {}, record.image.title),
        );
    },
};

const renderedHTML = render(content, options);
---

<article class="flow-content" set:html={renderedHTML} />

<style>
    article {
        --flow-space: 1rem;
        width: 100%;

        h2,
        h3,
        h4 {
            margin-top: 2rem;
            padding-bottom: 0;
            font-family: var(--ff-quicksand);
        }

        p {
            text-align: justify;
        }

        mark {
            padding: 2px 5px;
            color: var(--clr-text);
            background: color-mix(in srgb, var(--clr-primary) 70%, transparent);
        }

        div:has(img) {
            margin-top: calc(1.5 * var(--spacer));
            margin-bottom: var(--spacer);
        }

        img + span {
            display: block;
            font-size: var(--fs-xs);
            color: var(--clr-text);
            opacity: 0.7;
            text-align: end;
            margin-top: 1rem;
        }

        blockquote {
            border-left: 2px solid var(--clr-primary);
            margin: 2rem 0;
            padding-left: var(--spacer);

            footer {
                padding-inline: 0;
                margin-top: 1rem;
                font-size: var(--fs-xs);
                color: var(--clr-text);
                opacity: 0.7;
            }
        }

        code {
            background-color: hsl(from var(--clr-surface) h s calc(l + var(--clr-variation)));
            padding: 0.15rem 0.35rem;
            border-radius: 0.4rem;
        }

        p:has(code) + p, p + ul {
            margin-top: 0.4rem;
        }

        pre {
            background-color: hsl(from var(--clr-surface) h s calc(l + var(--clr-variation)));
            border-radius: 0.2rem;
            margin-inline: -1rem;
            margin-block: 1.5rem;
            padding: 1rem;
            overflow-x: scroll;
        }

        hr {
            opacity: 0.3;
            border-width: 0.5px;
            margin-top: 6rem;
            margin-bottom: 4rem;
        }

        [id]::before {
            content: "";
            display: block;
            height: 2.2rem;
            margin-top: -2.2rem;
            visibility: hidden;
        }
    }
</style>
