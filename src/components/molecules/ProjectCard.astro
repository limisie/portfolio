---
import { getDateYear } from "@scripts/utils";
import { Image } from "astro:assets";

const {
    project: { title, excerpt, startDate, endDate, slug, coverImage },
} = Astro.props;

const dateString = endDate
    ? `${getDateYear(startDate)}-${getDateYear(endDate)}`
    : `${getDateYear(startDate)}`;
---

<div class="card">
    <a href=`/portfolio/${slug}`></a>
    <div class="img-wrapper">
        {
            coverImage ? (
                <Image
                    src={coverImage.url}
                    alt={coverImage.alt}
                    height={100}
                    width={100}
                />
            ) : (
                <div class="placeholder-background" />
            )
        }
    </div>
    <div class="details flex">
        <div class="flow-content">
            <h4 class=""><span>{title}</span></h4>
            <p class="light-font"><span>{excerpt}</span></p>
        </div>
        <p class="light-font"><span>{dateString}</span></p>
    </div>
</div>

<style>
    .card {
        aspect-ratio: 1.618/1;
        position: relative;

        span {
            padding: 0.2rem;
            background: white;
            line-height: 1.4;
        }

        .light-font {
            opacity: 1;
        }

        .cursor-text {
            position: absolute;
            top: 0;
            left: 0;
            z-index: 1;
            box-shadow: var(--box-shadow);
        }

        .details {
            position: absolute;
            inset: 1rem;
            flex-direction: column;
            align-items: start;

            transition: opacity 0.3s ease-in-out;
        }

        .img-wrapper {
            overflow: hidden;
            height: 100%;
            opacity: unset;
            filter: unset;
            background: var(--clr-background);

            img {
                opacity: 0.2;
                transition: all 0.3s ease-in-out;
            }
        }

        &:hover {
            img {
                transform: scale(105%);
                opacity: 1;
            }

            .details {
                opacity: 0;
            }
        }
    }

    .flow-content {
        --flow-space: 0.5rem;
    }
</style>

<script>
    const setCursorText = (e) => {
        const card = e.target;
        const cardTitle = card.querySelector("h4").innerText;
        const textCursorElement = document.createElement("span");
        textCursorElement.innerText = cardTitle;
        textCursorElement.classList.add("cursor-text");
        card.appendChild(textCursorElement);

        card.addEventListener("mousemove", translateElement(textCursorElement));
    };

    const clearCursor = (e) => {
        const card = e.target;
        const textCursorElement = card.querySelector(".cursor-text");
        textCursorElement.remove();
    };

    const translateElement = (element) => {
        const translate = (event) => {
            element.style.transform = `translate3d(${event.layerX + 20}px, ${event.layerY - 10}px, 0)`;
        };
        return translate;
    };

    const cards = document.querySelectorAll(".card");

    cards.forEach((card) => {
        card.addEventListener("mouseenter", setCursorText);
        card.addEventListener("mouseleave", clearCursor);
    });
</script>
