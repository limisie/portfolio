---
import Head from "@layouts/Head.astro";
import Header from "@components/organisms/Header.astro";

const black = "#252525";
const darkGrey = "#2C2C2C";
const white = "#F6F6F6";
const grey = "#E8ECED";
const red = "#BC523C";
const blue = "#6F818B";
const darkBlue = "#4F6069";

interface Props {
    title?: string;
    description?: string;
    image?: string;
}

const {
    title = "Kaja Limisiewicz's personal site",
    description = "Discover my programming skills and learn about my technical insights through my portfolio and blog. Immerse yourself in the world of coding, website development and design with me.",
    image = "/images/limi.jpg",
} = Astro.props as Props;

const cookieTheme = Astro.cookies.get("theme")?.value || null;
---

<html lang="en" data-theme={cookieTheme}>
    <Head title={title} description={description} image={image} />
    <body>
        <Header theme={cookieTheme} />
        <slot />
        <style
            define:vars={{ black, darkGrey, white, grey, red, blue, darkBlue }}
            is:global
        >
            :root {
                --spacer: 1rem;

                --ff-rubik: "Rubik", sans-serif;
                --ff-montserrat: "Montserrat", sans-serif;
                --ff-quicksand: "Quicksand", sans-serif;

                --fs-h1: 4rem;
                --fs-h2: 3rem;
                --fs-h3: 2.5rem;
                --fs-h4: 1.375rem;
                --fs-p: 1.25rem;
                --fs-xs: 1rem;

                --fw-light: 300;
                --fw-medium: 500;
                --fw-semi-bold: 600;
                --fw-bold: 700;
                --fw-extra-bold: 800;

                --box-shadow: 0 0.25em 1.5em rgba(0, 0, 0, 0.15);

                --clr-primary: var(--red);
                --clr-secondary: var(--blue);
                --clr-secondary-variant: var(--darkBlue);
            }

            [data-theme="light"] {
                --clr-background: var(--white);
                --clr-surface: var(--grey);
                --clr-text: var(--black);
                color-scheme: light;
            }

            [data-theme="dark"] {
                --clr-background: var(--black);
                --clr-surface: var(--darkGrey);
                --clr-text: var(--grey);
                color-scheme: dark;
            }

            *,
            *::before,
            *::after {
                box-sizing: border-box;
            }

            h1,
            h2,
            h3,
            p {
                margin: 0;
            }

            img {
                display: block;
            }

            .flow-content > * + * {
                margin-top: var(--flow-space, var(--spacer));
            }

            body {
                position: relative;
                font-family: var(--ff-rubik);
                font-size: var(--fs-p);
                font-weight: var(--fw-light);
                background: var(--clr-background);
                color: var(--clr-text);
                margin: 0;
                line-height: 1.6;
            }

            h1 {
                font-family: var(--ff-montserrat);
                font-size: var(--fs-h1);
                font-weight: var(--fw-extra-bold);
            }

            h2 {
                font-family: var(--ff-montserrat);
                font-size: var(--fs-h2);
                font-weight: var(--fw-bold);
            }

            h3 {
                font-family: var(--ff-quicksand);
                font-size: var(--fs-h3);
                font-weight: var(--fw-medium);
            }

            h4 {
                font-family: var(--ff-rubik);
                font-size: var(--fs-h4);
                font-weight: var(--fw-semi-bold);
            }

            .container {
                max-width: 70rem;
                margin: 0 auto;
                padding: var(--spacer);
            }

            @media (min-width: 40rem) {
                .container {
                    padding: var(--spacer) 7rem;
                }
            }
        </style>
    </body>
</html>
